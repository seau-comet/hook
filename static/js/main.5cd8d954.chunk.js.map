{"version":3,"sources":["apiServices.js","components/myModal.js","components/mySpinner.js","App.js","index.js"],"names":["fetchData","a","axios","get","res","status","data","fetchOne","id","editData","text","myObj","name","address","Date","patch","deleteData","delete","addData","post","MyModal","isOpen","toggle","body","onClick","loading","Modal","ModalHeader","ModalBody","className","ModalFooter","Button","color","Spinner","as","animation","size","role","aria-hidden","MySpinner","App","title","useContext","titleContext","useState","margin","setMargin","lists","setLists","list","setList","modal","modify","overlay","setOverlay","add","edit","cancel","update","setLoading","textRef","useRef","checkNote","e","preventDefault","response","editList","deleteList","deleteResponse","addList","current","value","addResponse","fetchLists","useEffect","then","style","fontSize","fontWeight","marginBottom","length","map","index","key","cursor","suppressContentEditableWarning","contentEditable","placeholder","onFocus","_id","target","innerText","onBlur","data-toggle","data-placement","data-animation","data-container","ref","rows","backgroundColor","block","React","createContext","ReactDOM","render","Fragment","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.5cd8d954.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport const fetchData = async () => {\r\n  var res = await axios.get(\"https://api-hook-101.herokuapp.com/api/lists\");\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n\r\nexport const fetchOne = async (id) => {\r\n  var res = await axios.get(\r\n    `https://api-hook-101.herokuapp.com/api/list/${id}`\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n\r\nexport const editData = async (id, text) => {\r\n  let myObj = {\r\n    name: text,\r\n    address: Date(),\r\n  };\r\n  var res = await axios.patch(\r\n    `https://api-hook-101.herokuapp.com/api/edit/${id}`,\r\n    myObj\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return myObj;\r\n};\r\n// `https://api-hook-101.herokuapp.com/api/delete/${id}`\r\n\r\nexport const deleteData = async (id) => {\r\n  var res = await axios.delete(\r\n    `https://api-hook-101.herokuapp.com/api/delete/${id}`\r\n  );\r\n  if (res.status === 200) {\r\n    return id;\r\n  } else {\r\n    return \"failed\";\r\n  }\r\n};\r\nexport const addData = async (text) => {\r\n  let myObj = {\r\n    name: text,\r\n    address: Date(),\r\n  };\r\n  var res = await axios.post(\r\n    `https://api-hook-101.herokuapp.com/api/add`,\r\n    myObj\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Spinner,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nfunction MyModal({isOpen, toggle, body, onClick, loading}) {\r\n  return (\r\n    <div>\r\n      <Modal isOpen={isOpen} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Enter your list</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            {body}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={onClick}>\r\n            {loading ? (\r\n              <Spinner\r\n                className=\"mr-2\"\r\n                as=\"span\"\r\n                animation=\"grow\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            ) : null}\r\n            add\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyModal;\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nfunction MySpinner() {\r\n  return (\r\n    <div>\r\n      <Spinner\r\n        className=\"white\"\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MySpinner;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Button } from \"reactstrap\";\nimport {\n  addData,\n  deleteData,\n  editData,\n  fetchData,\n  fetchOne,\n} from \"./apiServices\";\nimport MyModal from \"./components/myModal\";\nimport MySpinner from \"./components/mySpinner\";\nimport \"./App.css\";\nimport { titleContext } from \".\";\n\nfunction App() {\n  const title = useContext(titleContext);\n  const [margin, setMargin] = useState(\"0px\");\n  const [lists, setLists] = useState({ status: false, data: [] });\n  const [list, setList] = useState({});\n  const [overlay, setOverlay] = useState({\n    modal: false,\n    modify: false,\n  });\n  const [loading, setLoading] = useState({\n    add: false,\n    edit: false,\n    delete: false,\n    cancel: false,\n    update: null,\n  });\n  const textRef = useRef();\n\n  const toggle = () => {\n    setOverlay({ modal: !overlay.modal });\n  };\n  const checkNote = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, cancel: true });\n    var response = await fetchOne(list.id);\n    if (response !== \"failed\") {\n      setLoading({ ...loading, cancel: false });\n      if (response[0].name !== list.text) {\n        setLoading({ ...loading, update: list });\n      }\n      setOverlay({ modify: false });\n    }\n  };\n  const editList = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, edit: true });\n    var editResponse = await editData(list.id, list.text);\n    if (editResponse !== \"failed\") {\n      setLoading({ ...loading, edit: false });\n      setOverlay({ modify: false });\n    }\n  };\n  const deleteList = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, delete: true });\n    var deleteResponse = await deleteData(list.id);\n    if (deleteResponse !== \"failed\") {\n      setLoading({ ...loading, delete: false });\n      setOverlay({ modify: false });\n      setLoading({ ...loading, update: deleteResponse });\n    }\n  };\n  const addList = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, add: true });\n    var addResponse = await addData(textRef.current.value);\n    if (addResponse !== \"failed\") {\n      setLoading({ ...loading, add: false });\n      setLoading({ ...loading, update: addResponse });\n      setOverlay({ modal: false });\n    }\n  };\n  const fetchLists = async () => {\n    var data = await fetchData();\n    return data;\n  };\n  useEffect(() => {\n    setLists({ status: false, data: [] });\n    fetchLists().then((data) => {\n      setLists({ status: true, data: data });\n    });\n  }, [loading.update]);\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <span\n          className=\"navbar-text\"\n          style={{ fontSize: \"48\", fontWeight: \"bold\" }}\n        >\n          {title}\n        </span>\n        {overlay.modify ? (\n          <Button color=\"warning\" className=\"text-white\" onClick={checkNote}>\n            {loading.cancel ? <MySpinner /> : \"Cancel\"}\n          </Button>\n        ) : (\n          <Button color=\"success\" onClick={toggle}>\n            Add List\n          </Button>\n        )}\n      </nav>\n      <ul\n        className=\"list-group list-group-flush\"\n        style={{ marginBottom: margin }}\n      >\n        {lists.data.length === 0 ? (\n          lists.status === false ? (\n            <div className=\"middle\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          ) : (\n            <div className=\"middle\">empty list</div>\n          )\n        ) : (\n          lists.data.map((value, index) => {\n            return (\n              <li\n                key={index}\n                style={{ cursor: \"pointer\", fontSize: \"18px\" }}\n                className=\"list-group-item bg-light text-dark\"\n                suppressContentEditableWarning={true}\n                contentEditable={true}\n                placeholder=\"Double click for deleting\"\n                onFocus={(e) => {\n                  e.preventDefault();\n                  setOverlay({ modify: true });\n                  setList({\n                    id: value._id,\n                    text: e.target.innerText,\n                  });\n                  setMargin(\"60px\");\n                }}\n                onBlur={(e) => {\n                  e.preventDefault();\n                  setList({\n                    id: value._id,\n                    text: e.target.innerText,\n                  });\n                }}\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title=\"Tooltip on top\"\n                data-animation={false}\n                data-container={true}\n              >\n                {value.name}\n              </li>\n            );\n          })\n        )}\n      </ul>\n\n      <MyModal\n        isOpen={overlay.modal}\n        toggle={toggle}\n        body={\n          <textarea\n            ref={textRef}\n            className=\"form-control\"\n            placeholder=\"type something ...\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n          />\n        }\n        onClick={addList}\n        loading={loading.add}\n      />\n\n      {overlay.modify ? (\n        <div style={{ backgroundColor: \"gray\" }}>\n          <div className=\"bg.dark row justify-content-center modify\">\n            <div className=\"col-5\">\n              <Button color=\"danger\" block onClick={deleteList}>\n                {loading.delete ? <MySpinner /> : <div>Delete</div>}\n              </Button>\n            </div>\n            <div className=\"col-5\">\n              <Button color=\"primary\" block onClick={editList}>\n                {loading.edit ? <MySpinner /> : \"Edit\"}\n              </Button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport const titleContext = React.createContext();\n\nReactDOM.render(\n  <React.Fragment>\n    <titleContext.Provider value=\"React Hook\">\n      <App />\n    </titleContext.Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}