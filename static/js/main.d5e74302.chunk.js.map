{"version":3,"sources":["services/apiServices.js","components/myModal.js","components/mySpinner.js","components/myNav.js","components/myList.js","components/myModify.js","App.js","index.js"],"names":["apiCall","url","method","data","id","a","axios","request","res","status","editData","name","myObj","address","Date","deleteData","addData","MyModal","isOpen","toggle","body","onClick","loading","Modal","ModalHeader","ModalBody","className","ModalFooter","Button","color","Spinner","as","animation","size","role","aria-hidden","MySpinner","_size","MyNav","modify","checkNote","cancel","title","useContext","titleContext","style","fontSize","fontWeight","myList","margin","length","lists","setOverlay","setList","setMargin","marginBottom","map","value","index","key","cursor","suppressContentEditableWarning","contentEditable","placeholder","onFocus","e","window","addEventListener","_id","text","target","innerText","onBlur","data-toggle","data-placement","data-animation","data-container","myModify","deleteList","editList","loadingDelete","loadingEdit","block","App","preventDefault","useState","setLists","list","modal","overlay","add","edit","delete","update","setLoading","textRef","useRef","response","baseList","start","end","api","addList","current","fetchLists","useEffect","then","ref","rows","React","createContext","ReactDOM","render","Fragment","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.d5e74302.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiCall = async (url, method, data, id) => {\r\n  const res = await axios.request({\r\n    url: url,\r\n    method: method,\r\n    data: data,\r\n  });\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  if (method === \"DELETE\") {\r\n    return id;\r\n  }\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return apiCall(\"https://api-hook-101.herokuapp.com/api/lists\", \"GET\");\r\n};\r\n\r\nexport const fetchOne = (id) => {\r\n  return apiCall(`https://api-hook-101.herokuapp.com/api/list/${id}`, \"GET\");\r\n};\r\n\r\nexport const editData = async (id, name) => {\r\n  let myObj = {\r\n    name: name,\r\n    address: Date(),\r\n  };\r\n\r\n  return apiCall(\r\n    `https://api-hook-101.herokuapp.com/api/edit/${id}`,\r\n    \"PATCH\",\r\n    myObj\r\n  );\r\n};\r\n\r\nexport const deleteData = async (id) => {\r\n  return apiCall(\r\n    `https://api-hook-101.herokuapp.com/api/delete/${id}`,\r\n    \"DELETE\",\r\n    null,\r\n    id\r\n  );\r\n};\r\nexport const addData = async (name) => {\r\n  let myObj = {\r\n    name: name,\r\n    address: Date(),\r\n  };\r\n\r\n  return apiCall(`https://api-hook-101.herokuapp.com/api/add`, \"POST\", myObj);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Spinner,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nfunction MyModal({isOpen, toggle, body, onClick, loading}) {\r\n  return (\r\n    <div>\r\n      <Modal isOpen={isOpen} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Enter your list</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            {body}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={onClick}>\r\n            {loading ? (\r\n              <Spinner\r\n                className=\"mr-2\"\r\n                as=\"span\"\r\n                animation=\"grow\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            ) : null}\r\n            add\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyModal;\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nfunction MySpinner({ size }) {\r\n  const _size = size ?? \"sm\";\r\n  return (\r\n    <div>\r\n      <Spinner\r\n        className=\"white\"\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size={_size}\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MySpinner;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { titleContext } from \"..\";\r\nimport MySpinner from \"./mySpinner\";\r\n\r\nfunction MyNav({modify, checkNote,cancel,toggle}) {\r\n  const title = useContext(titleContext);\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <span\r\n          className=\"navbar-text\"\r\n          style={{ fontSize: \"48\", fontWeight: \"bold\" }}\r\n        >\r\n          {title}\r\n        </span>\r\n        {modify ? (\r\n          <Button\r\n            color=\"warning\"\r\n            className=\"text-white\"\r\n            onClick={checkNote}\r\n          >\r\n            {cancel ? <MySpinner /> : \"Cancel\"}\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"success\" onClick={toggle}>\r\n            Add List\r\n          </Button>\r\n        )}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport MySpinner from \"./mySpinner\";\r\n\r\nfunction myList({\r\n  margin,\r\n  length,\r\n  status,\r\n  lists,\r\n  setOverlay,\r\n  setList,\r\n  setMargin,\r\n}) {\r\n  return (\r\n    <div>\r\n      <ul\r\n        className=\"list-group list-group-flush\"\r\n        style={{ marginBottom: margin }}\r\n      >\r\n        {length === 0 ? (\r\n          status === false ? (\r\n            <div className=\"middle\">\r\n              <MySpinner size=\"lg\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"middle\">empty list</div>\r\n          )\r\n        ) : (\r\n          lists.map((value, index) => {\r\n            return (\r\n              <li\r\n                key={index}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"18px\",\r\n                }}\r\n                className=\"list-group-item bg-light text-dark\"\r\n                suppressContentEditableWarning={true}\r\n                contentEditable={true}\r\n                placeholder=\"Double click for deleting\"\r\n                onFocus={(e) => {\r\n                  window.addEventListener(\"touchmove\", null);\r\n                  window.addEventListener(\"mousewheel\", null);\r\n                  setOverlay({ modify: true });\r\n                  setList({\r\n                    id: value._id,\r\n                    text: e.target.innerText,\r\n                  });\r\n                  setMargin(\"60px\");\r\n                }}\r\n                onBlur={(e) => {\r\n                  window.addEventListener(\"touchmove\", null);\r\n                  window.addEventListener(\"mousewheel\", null);\r\n                  setList({\r\n                    id: value._id,\r\n                    text: e.target.innerText,\r\n                  });\r\n                  setMargin(\"0px\");\r\n                }}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Tooltip on top\"\r\n                data-animation={false}\r\n                data-container={true}\r\n              >\r\n                {value.name}\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default myList;\r\n","import React from \"react\";\r\nimport MySpinner from \"./mySpinner\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction myModify({\r\n  modify,\r\n  deleteList,\r\n  editList,\r\n  loadingDelete,\r\n  loadingEdit,\r\n}) {\r\n  return (\r\n    <div>\r\n      {modify ? (\r\n        <div className=\"bg.dark row justify-content-around fixed-bottom mb-1\">\r\n          <div className=\"col-5\">\r\n            <Button color=\"danger\" block onClick={deleteList}>\r\n              {loadingDelete ? <MySpinner /> : <div>Delete</div>}\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <Button color=\"primary\" block onClick={editList}>\r\n              {loadingEdit ? <MySpinner /> : \"Edit\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default myModify;\r\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  addData,\n  deleteData,\n  editData,\n  fetchData,\n  fetchOne,\n} from \"./services/apiServices\";\n\nimport MyModal from \"./components/myModal\";\nimport MyNav from \"./components/myNav\";\nimport MyLists from \"./components/myList\";\nimport MyModify from \"./components/myModify\";\n\nimport \"./style/App.css\";\n\nfunction App() {\n  window.addEventListener('click', (e)=>e.preventDefault());\n\n  const [margin, setMargin] = useState(\"0px\");\n  const [lists, setLists] = useState({ status: false, data: [] });\n  const [list, setList] = useState({});\n  const [overlay, setOverlay] = useState({\n    modal: false,\n    modify: false,\n  });\n  const [loading, setLoading] = useState({\n    add: false,\n    edit: false,\n    delete: false,\n    cancel: false,\n    update: null,\n  });\n\n  const textRef = useRef();\n\n  const toggle = () => {\n    setOverlay({ modal: !overlay.modal });\n  };\n\n  const checkNote = async () => {\n    setLoading({ ...loading, cancel: true });\n    var response = await fetchOne(list.id);\n    if (response !== \"failed\") {\n      setLoading({ ...loading, cancel: false });\n      if (response[0].name !== list.text) {\n        setLoading({ ...loading, update: list });\n      }\n      setOverlay({ modify: false });\n    }\n  };\n\n  const baseList = async (start, end, update, overlay, api) => {\n    setLoading(start);\n    var response = await api;\n    if (response !== \"failed\") {\n      if (update !== false) {\n        setLoading({ ...loading, update: response });\n      }\n\n      setLoading(end);\n      setOverlay(overlay);\n    }\n  };\n\n  const editList = async () => {\n    baseList(\n      { ...loading, edit: true },\n      { ...loading, edit: false },\n      false,\n      { modify: false },\n      editData(list.id, list.text)\n    );\n  };\n\n  const deleteList = async () => {\n    baseList(\n      { ...loading, delete: true },\n      { ...loading, delete: false },\n      true,\n      { modify: false },\n      deleteData(list.id)\n    );\n  };\n\n  const addList = async () => {\n    baseList(\n      { ...loading, add: true },\n      { ...loading, add: false },\n      true,\n      { modal: false },\n      addData(textRef.current.value)\n    );\n  };\n\n  const fetchLists = async () => {\n    var data = await fetchData();\n    return data;\n  };\n\n  useEffect(() => {\n    setLists({ status: false, data: [] });\n    fetchLists().then((data) => {\n      setLists({ status: true, data: data });\n    });\n  }, [loading.update]);\n\n  useEffect(() => {}, []);\n  return (\n    <div>\n      <MyNav\n        modify={overlay.modify}\n        checkNote={checkNote}\n        cancel={loading.cancel}\n        toggle={toggle}\n      />\n\n      <MyLists\n        length={lists.data.length}\n        lists={lists.data}\n        margin={margin}\n        setList={setList}\n        setMargin={setMargin}\n        setOverlay={setOverlay}\n        status={lists.status}\n      />\n\n      <MyModal\n        isOpen={overlay.modal}\n        toggle={toggle}\n        body={\n          <textarea\n            ref={textRef}\n            className=\"form-control\"\n            placeholder=\"type something ...\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n          />\n        }\n        onClick={addList}\n        loading={loading.add}\n      />\n\n      <MyModify\n        deleteList={deleteList}\n        editList={editList}\n        loadingDelete={loading.delete}\n        loadingEdit={loading.edit}\n        modify={overlay.modify}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport const titleContext = React.createContext();\n\nReactDOM.render(\n  <React.Fragment>\n    <titleContext.Provider value=\"React Hook\">\n      <App />\n    </titleContext.Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}