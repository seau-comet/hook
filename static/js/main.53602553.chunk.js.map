{"version":3,"sources":["services/apiServices.js","components/myModal.js","components/mySpinner.js","components/myNav.js","components/myList.js","components/myModify.js","App.js","index.js"],"names":["fetchData","a","axios","get","res","status","data","fetchOne","id","editData","text","myObj","name","address","Date","patch","deleteData","delete","addData","post","MyModal","isOpen","toggle","body","onClick","loading","Modal","ModalHeader","ModalBody","className","ModalFooter","Button","color","Spinner","as","animation","size","role","aria-hidden","MySpinner","_size","MyNav","modify","checkNote","cancel","title","useContext","titleContext","style","fontSize","fontWeight","myList","margin","length","lists","setOverlay","setList","setMargin","marginBottom","map","value","index","key","cursor","suppressContentEditableWarning","contentEditable","placeholder","onFocus","e","preventDefault","_id","target","innerText","onBlur","data-toggle","data-placement","data-animation","data-container","myModify","deleteList","editList","loadingDelete","loadingEdit","backgroundColor","block","App","useState","setLists","list","modal","overlay","add","edit","update","setLoading","textRef","useRef","response","baseList","start","end","api","addList","current","fetchLists","useEffect","then","ref","rows","React","createContext","ReactDOM","render","Fragment","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.53602553.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport const fetchData = async () => {\r\n  var res = await axios.get(\"https://api-hook-101.herokuapp.com/api/lists\");\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n\r\nexport const fetchOne = async (id) => {\r\n  var res = await axios.get(\r\n    `https://api-hook-101.herokuapp.com/api/list/${id}`\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n\r\nexport const editData = async (id, text) => {\r\n  let myObj = {\r\n    name: text,\r\n    address: Date(),\r\n  };\r\n  var res = await axios.patch(\r\n    `https://api-hook-101.herokuapp.com/api/edit/${id}`,\r\n    myObj\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return myObj;\r\n};\r\n// `https://api-hook-101.herokuapp.com/api/delete/${id}`\r\n\r\nexport const deleteData = async (id) => {\r\n  var res = await axios.delete(\r\n    `https://api-hook-101.herokuapp.com/api/delete/${id}`\r\n  );\r\n  if (res.status === 200) {\r\n    return id;\r\n  } else {\r\n    return \"failed\";\r\n  }\r\n};\r\nexport const addData = async (text) => {\r\n  let myObj = {\r\n    name: text,\r\n    address: Date(),\r\n  };\r\n  var res = await axios.post(\r\n    `https://api-hook-101.herokuapp.com/api/add`,\r\n    myObj\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Spinner,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nfunction MyModal({isOpen, toggle, body, onClick, loading}) {\r\n  return (\r\n    <div>\r\n      <Modal isOpen={isOpen} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Enter your list</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            {body}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={onClick}>\r\n            {loading ? (\r\n              <Spinner\r\n                className=\"mr-2\"\r\n                as=\"span\"\r\n                animation=\"grow\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            ) : null}\r\n            add\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyModal;\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nfunction MySpinner({ size }) {\r\n  const _size = size ?? \"sm\";\r\n  return (\r\n    <div>\r\n      <Spinner\r\n        className=\"white\"\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size={_size}\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MySpinner;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { titleContext } from \"..\";\r\nimport MySpinner from \"./mySpinner\";\r\n\r\nfunction MyNav({modify, checkNote,cancel,toggle}) {\r\n  const title = useContext(titleContext);\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <span\r\n          className=\"navbar-text\"\r\n          style={{ fontSize: \"48\", fontWeight: \"bold\" }}\r\n        >\r\n          {title}\r\n        </span>\r\n        {modify ? (\r\n          <Button\r\n            color=\"warning\"\r\n            className=\"text-white\"\r\n            onClick={checkNote}\r\n          >\r\n            {cancel ? <MySpinner /> : \"Cancel\"}\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"success\" onClick={toggle}>\r\n            Add List\r\n          </Button>\r\n        )}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport MySpinner from \"./mySpinner\";\r\n\r\nfunction myList({margin, length, status, lists,setOverlay, setList, setMargin}) {\r\n  return (\r\n    <div>\r\n    <ul\r\n    className=\"list-group list-group-flush\"\r\n    style={{ marginBottom: margin }}\r\n  >\r\n    {length === 0 ? (\r\n      status === false ? (\r\n        <div className=\"middle\">\r\n          <MySpinner size=\"lg\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"middle\">empty list</div>\r\n      )\r\n    ) : (\r\n      lists.map((value, index) => {\r\n        return (\r\n          <li\r\n            key={index}\r\n            style={{ cursor: \"pointer\", fontSize: \"18px\" }}\r\n            className=\"list-group-item bg-light text-dark\"\r\n            suppressContentEditableWarning={true}\r\n            contentEditable={true}\r\n            placeholder=\"Double click for deleting\"\r\n            onFocus={(e) => {\r\n              e.preventDefault();\r\n              setOverlay({ modify: true });\r\n              setList({\r\n                id: value._id,\r\n                text: e.target.innerText,\r\n              });\r\n              setMargin(\"60px\");\r\n            }}\r\n            onBlur={(e) => {\r\n              e.preventDefault();\r\n              setList({\r\n                id: value._id,\r\n                text: e.target.innerText,\r\n              });\r\n            }}\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title=\"Tooltip on top\"\r\n            data-animation={false}\r\n            data-container={true}\r\n          >\r\n            {value.name}\r\n          </li>\r\n        );\r\n      })\r\n    )}\r\n  </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default myList;\r\n","import React from \"react\";\r\nimport MySpinner from \"./mySpinner\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction myModify({\r\n  modify,\r\n  deleteList,\r\n  editList,\r\n  loadingDelete,\r\n  loadingEdit,\r\n}) {\r\n  return (\r\n    <div>\r\n      {modify ? (\r\n        <div style={{ backgroundColor: \"gray\" }}>\r\n          <div className=\"bg.dark row justify-content-center modify\">\r\n            <div className=\"col-5\">\r\n              <Button color=\"danger\" block onClick={deleteList}>\r\n                {loadingDelete ? <MySpinner /> : <div>Delete</div>}\r\n              </Button>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <Button color=\"primary\" block onClick={editList}>\r\n                {loadingEdit ? <MySpinner /> : \"Edit\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default myModify;\r\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  addData,\n  deleteData,\n  editData,\n  fetchData,\n  fetchOne,\n} from \"./services/apiServices\";\n\nimport MyModal from \"./components/myModal\";\nimport MyNav from \"./components/myNav\";\nimport MyLists from \"./components/myList\";\nimport MyModify from \"./components/myModify\";\n\nimport \"./style/App.css\";\n\nfunction App() {\n  const [margin, setMargin] = useState(\"0px\");\n  const [lists, setLists] = useState({ status: false, data: [] });\n  const [list, setList] = useState({});\n  const [overlay, setOverlay] = useState({\n    modal: false,\n    modify: false,\n  });\n  const [loading, setLoading] = useState({\n    add: false,\n    edit: false,\n    delete: false,\n    cancel: false,\n    update: null,\n  });\n\n  const textRef = useRef();\n\n  const toggle = () => {\n    setOverlay({ modal: !overlay.modal });\n  };\n\n  const checkNote = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, cancel: true });\n    var response = await fetchOne(list.id);\n    if (response !== \"failed\") {\n      setLoading({ ...loading, cancel: false });\n      if (response[0].name !== list.text) {\n        setLoading({ ...loading, update: list });\n      }\n      setOverlay({ modify: false });\n    }\n  };\n\n  const baseList = async (start, end, update, overlay, api) => {\n    setLoading(start);\n    var response = await api;\n    if (response !== \"failed\") {\n      setLoading(end);\n      if (update !== false) {\n        setLoading({ ...loading, update: response });\n      }\n      setOverlay(overlay);\n    }\n  };\n\n  const editList = async (e) => {\n    e.preventDefault();\n    baseList(\n      { ...loading, edit: true },\n      { ...loading, edit: false },\n      false,\n      { modify: false },\n      editData(list.id, list.text)\n    );\n  };\n\n  const deleteList = async (e) => {\n    e.preventDefault();\n    baseList(\n      { ...loading, delete: true },\n      { ...loading, delete: false },\n      true,\n      { modify: false },\n      deleteData(list.id)\n    );\n  };\n\n  const addList = async (e) => {\n    e.preventDefault();\n    baseList(\n      { ...loading, add: true },\n      { ...loading, add: false },\n      true,\n      { modal: false },\n      addData(textRef.current.value)\n    );\n  };\n\n  const fetchLists = async () => {\n    var data = await fetchData();\n    return data;\n  };\n\n  useEffect(() => {\n    setLists({ status: false, data: [] });\n    fetchLists().then((data) => {\n      setLists({ status: true, data: data });\n    });\n  }, [loading.update]);\n\n  return (\n    <div>\n      <MyNav\n        modify={overlay.modify}\n        checkNote={checkNote}\n        cancel={loading.cancel}\n        toggle={toggle}\n      />\n\n      <MyLists\n        length={lists.data.length}\n        lists={lists.data}\n        margin={margin}\n        setList={setList}\n        setMargin={setMargin}\n        setOverlay={setOverlay}\n        status={lists.status}\n      />\n\n      <MyModal\n        isOpen={overlay.modal}\n        toggle={toggle}\n        body={\n          <textarea\n            ref={textRef}\n            className=\"form-control\"\n            placeholder=\"type something ...\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n          />\n        }\n        onClick={addList}\n        loading={loading.add}\n      />\n\n      <MyModify\n        deleteList={deleteList}\n        editList={editList}\n        loadingDelete={loading.delete}\n        loadingEdit={loading.edit}\n        modify={overlay.modify}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport const titleContext = React.createContext();\n\nReactDOM.render(\n  <React.Fragment>\n    <titleContext.Provider value=\"React Hook\">\n      <App />\n    </titleContext.Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}